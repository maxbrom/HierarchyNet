function [currentLEO_index, bestLEO_position, predictedHandoverPoints, ping_LEO] = handoverProcess(GEO_position, LEO_positions, LEO_velocities, user_position, currentLEO_index, c, method)
    % Create network conditions object with all random factors
    network = struct(...
        'fixed', struct(...
            'processing_delay', 2, ...    % Satellite processing time
            'equipment_delay', 1, ...     % Network equipment delay
            'ground_station_delay', 5, ...% Ground station processing
            'atmospheric_factor', 1.1 ... % 10% slowdown due to atmosphere
        ), ...
        'variable', struct(...
            'network_jitter', rand() * 2, ...          % 0-2ms random jitter
            'packet_loss_delay', 0, ...                % Default to 0
            'final_variation', (rand() - 0.5) ...      % Â±0.5ms variation
        ) ...
    );
    
    % Handle packet loss probability
    if rand() < 0.05  % 5% chance of packet loss
        network.variable.packet_loss_delay = rand() * 10;  % 0-10ms delay
    end
    
    switch method
        case 'kalman'
            [currentLEO_index, bestLEO_position, predictedHandoverPoints, ping_LEO] = ...
                kalmanHandoverProcess(GEO_position, LEO_positions, LEO_velocities, ...
                user_position, currentLEO_index, c, network);
        case 'hmm'
            [currentLEO_index, bestLEO_position, predictedHandoverPoints, ping_LEO] = ...
                hmmHandoverProcess(GEO_position, LEO_positions, LEO_velocities, ...
                user_position, currentLEO_index, c, network);
        case 'keplerian'
            [currentLEO_index, bestLEO_position, predictedHandoverPoints, ping_LEO] = ...
                keplerianHandoverProcess(GEO_position, LEO_positions, LEO_velocities, ...
                user_position, currentLEO_index, c, network);
        otherwise % 'original'
            [currentLEO_index, bestLEO_position, predictedHandoverPoints, ping_LEO] = ...
                originalHandoverProcess(GEO_position, LEO_positions, LEO_velocities, ...
                user_position, currentLEO_index, c, network);
    end
end